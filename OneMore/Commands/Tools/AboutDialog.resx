<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="sponsorButton.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        HnC0TgAAAABJRU5ErkJggg==
</value>
  </data>
</root>